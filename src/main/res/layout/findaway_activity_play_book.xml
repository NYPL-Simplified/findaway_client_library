<?xml version="1.0" encoding="utf-8"?>
<!-- This drawer is for the table of contents. -->
<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    android:layout_gravity="right"
    tools:openDrawer="start">

    <!-- This LinearLayout is serving as a container for all the non-drawer views (the appbar and the main content views). -->
    <LinearLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:id="@+id/grandparent_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        tools:context="org.nypl.findawayclientlibrary.PlayBookActivity">

        <android.support.design.widget.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:theme="@style/AppTheme.AppBarOverlay">

            <!-- Houses the top menu controls, like "Back", "Sleep Timer", and "TOC".
             The controls are coded in action_toolbar.xml, and loaded dynamically in java code. -->
            <!-- NOTE: Might need to wrap toolbar in its own linear layout. -->
            <!-- NOTE: contentInsetEnd, contentInsetStart=0dp removes extra margin space in the toolbar -->
            <android.support.v7.widget.Toolbar
                android:id="@+id/top_nav_toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                android:elevation="4dp"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light">

            </android.support.v7.widget.Toolbar>
        </android.support.design.widget.AppBarLayout>


        <!-- The FrameLayout serves as a container, into which we will load various content frames. -->
        <!-- Start with the book selector fragment, then through the java code will replace this with the player-related fragment. -->
        <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
                     android:id="@+id/fragment_container"
                     android:layout_width="match_parent"
                     android:layout_height="match_parent">
        </FrameLayout>

    </LinearLayout>


    <!-- NOTE:  Drawer must be a direct child (not grandchild) of DrawerLayout. -->
    <!-- TODO:  android:scrollY	is the initial vertical scroll offset.  set it from the code,
     when playing a later chapter, maybe add computeVerticalScrollOffset(), awakenScrollBars()
     and check canScrollVertically().  consider
     ((NavigationMenuView)((NavigationView)drawerView).getChildAt(0)).scrollToPosition(0);
     or
     ((NavigationMenuView)navigationView.getChildAt(0)).smoothScrollToPosition(0);
     or navigationView.smoothScrollToPosition(0);
      -->
    <android.support.design.widget.NavigationView
        android:id="@+id/toc_drawer_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="end"
        android:fitsSystemWindows="true"
        app:headerLayout="@layout/burger_menu_header"
        app:theme="@style/TableOfContents_TextAppearance"
        app:menu="@menu/burger_menu_drawer_items"
        >
    </android.support.design.widget.NavigationView>


</android.support.v4.widget.DrawerLayout>
